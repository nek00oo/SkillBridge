model User {
  id              Int       @id @default(autoincrement())
  role            Role      @default(STUDENT)
  email           String    @unique
  password        String
  firstname       String
  lastname        String?
  birthDate       DateTime?
  profileImageUrl String?

  tutorCard TutorCard?

  tutors   Mentorship[] @relation("Student_Tutors")
  students Mentorship[] @relation("Tutor_Students")

  assignmentsGiven    Assignment[] @relation("Tutor_Assignments")
  assignmentsReceived Assignment[] @relation("Student_Assignments")

  reviewsGiven Review[] @relation("Student_Reviews")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Mentorship {
  id Int @id @default(autoincrement())

  student   User @relation("Student_Tutors", fields: [studentId], references: [id], onDelete: Cascade)
  studentId Int  @map("student_id")

  tutor   User @relation("Tutor_Students", fields: [tutorId], references: [id], onDelete: Cascade)
  tutorId Int  @map("tutor_id")

  createdAt DateTime @default(now())

  @@unique([studentId, tutorId])
  @@map("mentorship")
}

enum Role {
  STUDENT
  TUTOR
  ADMIN
}
